package core;
//palmTree model 
public class palmTree extends solidObject{
	//the polygons of the model
	private  polygon3D[] polygons; 
	
	//the shadow map generated by the model
	public polygon3D shadow;
	
	public int angle;
	
	
	public palmTree(double x, double y, double z, int angle){
		this.angle = angle;
		
		start = new vector(x,y,z);
		
		iDirection = new vector(0.7+0.3*1.1,0,0);
		jDirection = new vector(0,0.8+0.3,0);
		kDirection = new vector(0,0,0.7+0.3*1.1);
		
		//boundary of this model has a cubic shape (ie l = w)
		modelType = 7;  
		makeBoundary(0.1, 0.25, 0.1);
		
		//create 2D boundary
		boundary2D = new rectangle2D(x - 0.005, z + 0.005, 0.01, 0.01);
		obstacleMap.registerObstacle1(this, (int)(x*4) + (129-(int)(z*4))*80);
		
		
		
		//adjust orientation of the model
		iDirection.rotate_XZ(angle);
		kDirection.rotate_XZ(angle);
		
		//find centre of the model in world coordinate
		findCentre();
		
		makePolygons();
	}
	
	//return the 2D boundary of this model
	public rectangle2D getBoundary2D(){
		return boundary2D;
	}
	
	//Construct polygons for this model.
	//The polygon data is hard-coded here
	private void makePolygons(){
		vector[] v;
		double x = start.x;
		double y = start.y;
		double z = start.z;
		
		start.add(0,-0.25,0);
		polygons = new polygon3D[38]; 
		
		//body
		v = new vector[]{put(-0.001, 0.1, -0.01), put(0.016, 0.1, -0.01), put(0.01, 0, -0.01), put(-0.014, 0, -0.01)};
		polygons[0] = new polygon3D(v, v[0], v[1], v [2], main.textures[5], 0.1,0.5,6);
		
		v = new vector[]{put(-0.001, 0.1, 0.01), put(-0.001, 0.1, -0.01), put(-0.014, 0, -0.01), put(-0.014, 0, 0.014)};
		polygons[1] = new polygon3D(v, v[0], v[1], v [2], main.textures[5], 0.1,0.5,6);
		
		v = new vector[]{put(0.016, 0.1, 0.01), put(-0.001, 0.1, 0.01), put(-0.014, 0, 0.014), put(0.01, 0, 0.014)};
		polygons[2] = new polygon3D(v, v[0], v[1], v [2], main.textures[5], 0.1,0.5,6);
		
		v = new vector[]{put(0.016, 0.1, -0.01), put(0.016, 0.1, 0.01), put(0.01, 0, 0.014), put(0.01, 0, -0.01)};
		polygons[3] = new polygon3D(v, v[0], v[1], v [2], main.textures[5], 0.1,0.5,6);
		
		v = new vector[]{put(0.002, 0.3, -0.008), put(0.013, 0.3, -0.008), put(0.016, 0.1, -0.01), put(-0.001, 0.1, -0.01)};
		polygons[4] = new polygon3D(v, v[0], v[1], v [2], main.textures[5], 0.1,0.5,6);
		
		v = new vector[]{put(0.002, 0.3, 0.006), put(0.002, 0.3, -0.008), put(-0.001, 0.1, -0.01),put(-0.001, 0.1, 0.01)};
		polygons[5] = new polygon3D(v, v[0], v[1], v [2], main.textures[5], 0.1,0.5,6);
		
		v = new vector[]{put(0.013, 0.3, 0.006), put(0.002, 0.3, 0.006), put(-0.001, 0.1, 0.01),put(0.016, 0.1, 0.01)};
		polygons[6] = new polygon3D(v, v[0], v[1], v [2], main.textures[5], 0.1,0.5,6);
		
		v = new vector[]{put(0.013, 0.3, -0.008), put(0.013, 0.3, 0.006), put(0.016, 0.1, 0.01), put(0.016, 0.1, -0.01)};
		polygons[7] = new polygon3D(v, v[0], v[1], v [2], main.textures[5], 0.1,0.5,6);
		
		//leaves
		start.add(0.005, 0,0);
		v = new vector[]{put(0.015, 0.3, 0.01), put(0, 0.3, 0), put(0, 0.34, 0.05), put(0.015, 0.32, 0.05)};
		polygons[8] = new polygon3D(v, v[0], v[1], v [3], main.textures[9], 1,1,6);
		
		v = new vector[]{put(0, 0.3, 0), put(-0.015, 0.3, 0.01), put(-0.015, 0.32, 0.05), put(0, 0.34, 0.05)};
		polygons[9] = new polygon3D(v, v[0], v[1], v [3], main.textures[9], 1,1,6);
		
		v = new vector[]{put(0, 0.34, 0.05), put(0, 0.33, 0.09), put(0.015, 0.31, 0.09), put(0.015, 0.32, 0.05)};
		polygons[10] = new polygon3D(v, v[0], v[1], v [3], main.textures[9], 1,1,6);
	
		v = new vector[]{put(0, 0.34, 0.05), put(-0.015, 0.32, 0.05), put(-0.015, 0.31, 0.09), put(0, 0.33, 0.09)};
		polygons[11] = new polygon3D(v, v[0], v[1], v [3], main.textures[9], 1,1,6);
		
		v = new vector[]{put(0, 0.33, 0.09), put(-0.015, 0.31, 0.09), put(0, 0.29, 0.12)};
		polygons[12] = new polygon3D(v, v[0], v[1], v [2], main.textures[9], 1,1,6);
		
		v = new vector[]{put(0.015, 0.31, 0.09), put(0, 0.33, 0.09), put(0, 0.29, 0.12)};
		polygons[13] = new polygon3D(v, v[0], v[1], v [2], main.textures[9], 1,1,6);
		
		iDirection.rotate_XZ(360/5);
		kDirection.rotate_XZ(360/5);
		
		v = new vector[]{put(0.015, 0.3, 0.01), put(0, 0.3, 0), put(0, 0.34, 0.05), put(0.015, 0.32, 0.05)};
		polygons[14] = new polygon3D(v, v[0], v[1], v [3], main.textures[9], 1,1,6);
		
		v = new vector[]{put(0, 0.3, 0), put(-0.015, 0.3, 0.01), put(-0.015, 0.32, 0.05), put(0, 0.34, 0.05)};
		polygons[15] = new polygon3D(v, v[0], v[1], v [3], main.textures[9], 1,1,6);
		
		v = new vector[]{put(0, 0.34, 0.05), put(0, 0.33, 0.09), put(0.015, 0.31, 0.09), put(0.015, 0.32, 0.05)};
		polygons[16] = new polygon3D(v, v[0], v[1], v [3], main.textures[9], 1,1,6);
	
		v = new vector[]{put(0, 0.34, 0.05), put(-0.015, 0.32, 0.05), put(-0.015, 0.31, 0.09), put(0, 0.33, 0.09)};
		polygons[17] = new polygon3D(v, v[0], v[1], v [3], main.textures[9], 1,1,6);
		
		v = new vector[]{put(0, 0.33, 0.09), put(-0.015, 0.31, 0.09), put(0, 0.29, 0.12)};
		polygons[18] = new polygon3D(v, v[0], v[1], v [2], main.textures[9], 1,1,6);
		
		v = new vector[]{put(0.015, 0.31, 0.09), put(0, 0.33, 0.09), put(0, 0.29, 0.12)};
		polygons[19] = new polygon3D(v, v[0], v[1], v [2], main.textures[9], 1,1,6);
		
		iDirection.rotate_XZ(360/5);
		kDirection.rotate_XZ(360/5);
		
		v = new vector[]{put(0.015, 0.3, 0.01), put(0, 0.3, 0), put(0, 0.34, 0.05), put(0.015, 0.32, 0.05)};
		polygons[20] = new polygon3D(v, v[0], v[1], v [3], main.textures[9], 1,1,6);
		
		v = new vector[]{put(0, 0.3, 0), put(-0.015, 0.3, 0.01), put(-0.015, 0.32, 0.05), put(0, 0.34, 0.05)};
		polygons[21] = new polygon3D(v, v[0], v[1], v [3], main.textures[9], 1,1,6);
		
		v = new vector[]{put(0, 0.34, 0.05), put(0, 0.33, 0.09), put(0.015, 0.31, 0.09), put(0.015, 0.32, 0.05)};
		polygons[22] = new polygon3D(v, v[0], v[1], v [3], main.textures[9], 1,1,6);
	
		v = new vector[]{put(0, 0.34, 0.05), put(-0.015, 0.32, 0.05), put(-0.015, 0.31, 0.09), put(0, 0.33, 0.09)};
		polygons[23] = new polygon3D(v, v[0], v[1], v [3], main.textures[9], 1,1,6);
		
		v = new vector[]{put(0, 0.33, 0.09), put(-0.015, 0.31, 0.09), put(0, 0.29, 0.12)};
		polygons[24] = new polygon3D(v, v[0], v[1], v [2], main.textures[9], 1,1,6);
		
		v = new vector[]{put(0.015, 0.31, 0.09), put(0, 0.33, 0.09), put(0, 0.29, 0.12)};
		polygons[25] = new polygon3D(v, v[0], v[1], v [2], main.textures[9], 1,1,6);
		
		iDirection.rotate_XZ(360/5);
		kDirection.rotate_XZ(360/5);
		
		v = new vector[]{put(0.015, 0.3, 0.01), put(0, 0.3, 0), put(0, 0.34, 0.05), put(0.015, 0.32, 0.05)};
		polygons[26] = new polygon3D(v, v[0], v[1], v [3], main.textures[9], 1,1,6);
		
		v = new vector[]{put(0, 0.3, 0), put(-0.015, 0.3, 0.01), put(-0.015, 0.32, 0.05), put(0, 0.34, 0.05)};
		polygons[27] = new polygon3D(v, v[0], v[1], v [3], main.textures[9], 1,1,6);
		
		v = new vector[]{put(0, 0.34, 0.05), put(0, 0.33, 0.09), put(0.015, 0.31, 0.09), put(0.015, 0.32, 0.05)};
		polygons[28] = new polygon3D(v, v[0], v[1], v [3], main.textures[9], 1,1,6);
	
		v = new vector[]{put(0, 0.34, 0.05), put(-0.015, 0.32, 0.05), put(-0.015, 0.31, 0.09), put(0, 0.33, 0.09)};
		polygons[29] = new polygon3D(v, v[0], v[1], v [3], main.textures[9], 1,1,6);
		
		v = new vector[]{put(0, 0.33, 0.09), put(-0.015, 0.31, 0.09), put(0, 0.29, 0.12)};
		polygons[30] = new polygon3D(v, v[0], v[1], v [2], main.textures[9], 1,1,6);
		
		v = new vector[]{put(0.015, 0.31, 0.09), put(0, 0.33, 0.09), put(0, 0.29, 0.12)};
		polygons[31] = new polygon3D(v, v[0], v[1], v [2], main.textures[9], 1,1,6);
		
		iDirection.rotate_XZ(360/5);
		kDirection.rotate_XZ(360/5);
		
		v = new vector[]{put(0.015, 0.3, 0.01), put(0, 0.3, 0), put(0, 0.34, 0.05), put(0.015, 0.32, 0.05)};
		polygons[32] = new polygon3D(v, v[0], v[1], v [3], main.textures[9], 1,1,6);
		
		v = new vector[]{put(0, 0.3, 0), put(-0.015, 0.3, 0.01), put(-0.015, 0.32, 0.05), put(0, 0.34, 0.05)};
		polygons[33] = new polygon3D(v, v[0], v[1], v [3], main.textures[9], 1,1,6);
		
		v = new vector[]{put(0, 0.34, 0.05), put(0, 0.33, 0.09), put(0.015, 0.31, 0.09), put(0.015, 0.32, 0.05)};
		polygons[34] = new polygon3D(v, v[0], v[1], v [3], main.textures[9], 1,1,6);
	
		v = new vector[]{put(0, 0.34, 0.05), put(-0.015, 0.32, 0.05), put(-0.015, 0.31, 0.09), put(0, 0.33, 0.09)};
		polygons[35] = new polygon3D(v, v[0], v[1], v [3], main.textures[9], 1,1,6);
		
		v = new vector[]{put(0, 0.33, 0.09), put(-0.015, 0.31, 0.09), put(0, 0.29, 0.12)};
		polygons[36] = new polygon3D(v, v[0], v[1], v [2], main.textures[9], 1,1,6);
		
		v = new vector[]{put(0.015, 0.31, 0.09), put(0, 0.33, 0.09), put(0, 0.29, 0.12)};
		polygons[37] = new polygon3D(v, v[0], v[1], v [2], main.textures[9], 1,1,6);
		
		iDirection = new vector(0.4+0.3*0.4,0,0);
		jDirection = new vector(0,0.5,0);
		kDirection = new vector(0,0,0.7+0.3*0.7);
		
		start.add(0.03, 0, 0);
		
		v = new vector[]{put(-0.5, 0, 0.4), put(0.4, 0, 0.4), put(0.4, 0, -0.5),put(-0.5, 0, -0.5)};
		shadow = new polygon3D(v, v[0], v[1],v[3], main.textures[10], 1,1,2);
		
		start.set(x,y,z);
		iDirection = new vector(0.7+0.3*1.1,0,0);
		jDirection = new vector(0,0.8+0.3,0);
		kDirection = new vector(0,0,0.7+0.3*1.1);
		
		iDirection.rotate_XZ(angle);
		kDirection.rotate_XZ(angle);
	}
	
	//update the model 
	public void update(){
		
		tempCentre.set(centre);
		tempCentre.y = 0.25;
		tempCentre.subtract(camera.absolutePosition);
		if(tempCentre.getLength() > 5.5){
			polygons = null;
			visible = false;
			return;
		}
		
		//find centre in camera coordinate
		tempCentre.set(centre);
		tempCentre.y = -1;
		tempCentre.subtract(camera.position);
		tempCentre.rotate_XZ(camera.XZ_angle);
		tempCentre.rotate_YZ(camera.YZ_angle);
		tempCentre.updateLocation();
		
		
		
		
		//test whether the model is visible by comparing the 2D position of its centre point with the screen area
		if(tempCentre.z < 0.9 || tempCentre.screenY < -10 || (tempCentre.screenX < -60 && tempCentre.z > 3) || (tempCentre.screenX >700 &&  tempCentre.z > 3)){
			
			visible = false;
			return;
		}
		visible = true;
		
		modelDrawList.register(this);
		
		if(polygons == null){
			makePolygons();
			
		}
		
		//update polygons
		for(int i = 0; i < polygons.length; i++){
			polygons[i].update();
		}
		
		//Send the shadow polygon to shadow list which will get drawn before
		//terrain
		if(shadow != null){
			shadow.update();
			if(shadow.visible){
				rasterizer.rasterize(shadow);
			}
		}
	}
	
	//draw model
	public void draw(){
		for(int i = 0; i < polygons.length; i++){
			polygons[i].draw();
		}
	}

}
